name: 'Calificaci√≥n de las fases del proyecto'

on:
  push:
    branches: ['master', 'main', 'develop']
  pull_request:
    branches: ['master', 'main', 'develop']

jobs:
  threads:
    name: 'Fase: Threads'
    runs-on: 'ubuntu-latest'
    env:
      phase: 'threads'
    steps:
      - name: 'Clonando repositorio'
        uses: 'actions/checkout@v2'
      - name: 'Build and Check'
        id: 'phase'
        uses: './.github/docker'
        with:
            phase: '${{ env.phase }}'
      - name: 'Show results'
        run: 'echo "${{ steps.phase.outputs.results }}"'

  userprog:
    name: 'Fase: User Programs'
    runs-on: 'ubuntu-latest'
    env:
      phase: 'userprog'
    steps:
      - name: 'Clonando repositorio'
        uses: 'actions/checkout@v2'
      - name: 'Build and Check'
        id: 'phase'
        uses: './.github/docker'
        with:
            phase: '${{ env.phase }}'
      - name: 'Show results'
        run: 'echo "${{ steps.phase.outputs.results }}"'

  vm:
    name: 'Fase: Virtual Memory'
    runs-on: 'ubuntu-latest'
    env:
      phase: 'vm'
    steps:
      - name: 'Clonando repositorio'
        uses: 'actions/checkout@v2'
      - name: 'Build and Check'
        id: 'phase'
        uses: './.github/docker'
        with:
            phase: '${{ env.phase }}'
      - name: 'Show results'
        run: 'echo "${{ steps.phase.outputs.results }}"'

  filesys:
    name: 'Fase: File System'
    runs-on: 'ubuntu-latest'
    env:
      phase: 'filesys'
    steps:
      - name: 'Clonando repositorio'
        uses: 'actions/checkout@v2'
      - name: 'Build and Check'
        id: 'phase'
        uses: './.github/docker'
        with:
            phase: '${{ env.phase }}'
      - name: 'Show results'
        run: 'echo "${{ steps.phase.outputs.results }}"'
